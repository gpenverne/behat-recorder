webpackHotUpdate("options",{

/***/ "./src/code-generator/CodeGenerator.js":
/*!*********************************************!*\
  !*** ./src/code-generator/CodeGenerator.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defaults = undefined;\n\nvar _getIterator2 = __webpack_require__(/*! babel-runtime/core-js/get-iterator */ \"./node_modules/babel-runtime/core-js/get-iterator.js\");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nvar _assign = __webpack_require__(/*! babel-runtime/core-js/object/assign */ \"./node_modules/babel-runtime/core-js/object/assign.js\");\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _classCallCheck2 = __webpack_require__(/*! babel-runtime/helpers/classCallCheck */ \"./node_modules/babel-runtime/helpers/classCallCheck.js\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(/*! babel-runtime/helpers/createClass */ \"./node_modules/babel-runtime/helpers/createClass.js\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _domEventsToRecord = __webpack_require__(/*! ./dom-events-to-record */ \"./src/code-generator/dom-events-to-record.js\");\n\nvar _domEventsToRecord2 = _interopRequireDefault(_domEventsToRecord);\n\nvar _pptrActions = __webpack_require__(/*! ./pptr-actions */ \"./src/code-generator/pptr-actions.js\");\n\nvar _pptrActions2 = _interopRequireDefault(_pptrActions);\n\nvar _Block = __webpack_require__(/*! ./Block */ \"./src/code-generator/Block.js\");\n\nvar _Block2 = _interopRequireDefault(_Block);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar featureTitle = 'Feature: my feature name\\n\\tScenario: my scenario\\n';\n\nvar defaults = exports.defaults = {\n  wrapAsync: true,\n  headless: true,\n  waitForNavigation: true,\n  waitForSelectorOnClick: true,\n  blankLinesBetweenBlocks: true,\n  dataAttribute: ''\n};\n\nvar CodeGenerator = function () {\n  function CodeGenerator(options) {\n    (0, _classCallCheck3.default)(this, CodeGenerator);\n\n    this._options = (0, _assign2.default)(defaults, options);\n    this._blocks = [];\n    this._frame = 'page';\n    this._frameId = 0;\n    this._allFrames = {};\n    this._screenshotCounter = 1;\n\n    this._hasNavigation = false;\n  }\n\n  (0, _createClass3.default)(CodeGenerator, [{\n    key: 'generate',\n    value: function generate(events) {\n      return featureTitle + this._parseEvents(events);\n    }\n  }, {\n    key: '_parseEvents',\n    value: function _parseEvents(events) {\n      console.debug('generating code for ' + (events ? events.length : 0) + ' events');\n      var result = '';\n\n      if (!events) return result;\n\n      for (var i = 0; i < events.length; i++) {\n        var _events$i = events[i],\n            action = _events$i.action,\n            selector = _events$i.selector,\n            value = _events$i.value,\n            href = _events$i.href,\n            keyCode = _events$i.keyCode,\n            tagName = _events$i.tagName,\n            frameId = _events$i.frameId,\n            frameUrl = _events$i.frameUrl;\n\n        // we need to keep a handle on what frames events originate from\n\n        this._setFrames(frameId, frameUrl);\n\n        switch (action) {\n          case 'keydown':\n            if (keyCode === 9) {\n              // tab key\n              this._blocks.push(this._handleKeyDown(selector, value, keyCode));\n            }\n            break;\n          case 'click':\n            this._blocks.push(this._handleClick(selector, events));\n            break;\n          case 'change':\n            if (tagName === 'SELECT') {\n              this._blocks.push(this._handleChange(selector, value));\n            }\n            break;\n          case _pptrActions2.default.GOTO:\n            this._blocks.push(this._handleGoto(href, frameId));\n            break;\n          case _pptrActions2.default.VIEWPORT:\n            this._blocks.push(this._handleViewport(value.width, value.height));\n            break;\n          case _pptrActions2.default.NAVIGATION:\n            this._blocks.push(this._handleWaitForNavigation());\n            this._hasNavigation = true;\n            break;\n          case _pptrActions2.default.SCREENSHOT:\n            this._blocks.push(this._handleScreenshot(value));\n            break;\n        }\n      }\n      console.log(this._blocks);\n      if (this._hasNavigation && this._options.waitForNavigation) {\n        console.debug('Adding navigationPromise declaration');\n        var block = new _Block2.default(this._frameId, { type: _pptrActions2.default.NAVIGATION_PROMISE, value: 'const navigationPromise = page.waitForNavigation()' });\n        this._blocks.unshift(block);\n      }\n\n      console.debug('post processing blocks:', this._blocks);\n\n      var indent = this._options.wrapAsync ? '  ' : '';\n      var newLine = '\\n';\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = (0, _getIterator3.default)(this._blocks), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var _block = _step.value;\n\n          var lines = _block.getLines();\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = (0, _getIterator3.default)(lines), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var line = _step2.value;\n\n              result += indent + line.value + newLine;\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: '_setFrames',\n    value: function _setFrames(frameId, frameUrl) {\n      if (frameId && frameId !== 0) {\n        this._frameId = frameId;\n        this._frame = 'frame_' + frameId;\n        this._allFrames[frameId] = frameUrl;\n      } else {\n        this._frameId = 0;\n        this._frame = 'page';\n      }\n    }\n  }, {\n    key: '_handleKeyDown',\n    value: function _handleKeyDown(selector, value) {\n      return new _Block2.default(this._frameId, { type: _domEventsToRecord2.default.CHANGE, value: 'Given I type \\'' + value + '\\' in field \\'' + selector + '\\'' });\n    }\n  }, {\n    key: '_handleClick',\n    value: function _handleClick(selector) {\n      var block = new _Block2.default(this._frameId);\n      if (this._options.waitForSelectorOnClick) {\n        block.addLine({ type: _domEventsToRecord2.default.CLICK, value: 'Given I click on \\'' + selector + '\\'' });\n      }\n      return block;\n    }\n  }, {\n    key: '_handleChange',\n    value: function _handleChange(selector, value) {\n      return new _Block2.default(this._frameId, { type: _domEventsToRecord2.default.CHANGE, value: 'Given I type \\'' + value + '\\' in field \\'' + selector + '\\'' });\n    }\n  }, {\n    key: '_handleGoto',\n    value: function _handleGoto(href) {\n      return new _Block2.default(this._frameId, { type: _pptrActions2.default.GOTO, value: 'Given I go on \\'' + href + '\\'' });\n    }\n  }, {\n    key: '_handleViewport',\n    value: function _handleViewport(width, height) {\n      //return new Block(this._frameId, { type: pptrActions.VIEWPORT, value: `await ${this._frame}.setViewport({ width: ${width}, height: ${height} })` })\n    }\n  }, {\n    key: '_handleScreenshot',\n    value: function _handleScreenshot(options) {\n      var block = void 0;\n      block = new _Block2.default(this._frameId, {\n        type: _pptrActions2.default.SCREENSHOT,\n        value: 'Take a screenshot '\n      });\n      this._screenshotCounter++;\n      return block;\n    }\n  }, {\n    key: '_handleWaitForNavigation',\n    value: function _handleWaitForNavigation() {}\n  }, {\n    key: '_postProcessSetFrames',\n    value: function _postProcessSetFrames() {}\n  }, {\n    key: '_postProcessAddBlankLines',\n    value: function _postProcessAddBlankLines() {}\n  }]);\n  return CodeGenerator;\n}();\n\nexports.default = CodeGenerator;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29kZS1nZW5lcmF0b3IvQ29kZUdlbmVyYXRvci5qcz85NDIyIl0sIm5hbWVzIjpbImZlYXR1cmVUaXRsZSIsImRlZmF1bHRzIiwid3JhcEFzeW5jIiwiaGVhZGxlc3MiLCJ3YWl0Rm9yTmF2aWdhdGlvbiIsIndhaXRGb3JTZWxlY3Rvck9uQ2xpY2siLCJibGFua0xpbmVzQmV0d2VlbkJsb2NrcyIsImRhdGFBdHRyaWJ1dGUiLCJDb2RlR2VuZXJhdG9yIiwib3B0aW9ucyIsIl9vcHRpb25zIiwiX2Jsb2NrcyIsIl9mcmFtZSIsIl9mcmFtZUlkIiwiX2FsbEZyYW1lcyIsIl9zY3JlZW5zaG90Q291bnRlciIsIl9oYXNOYXZpZ2F0aW9uIiwiZXZlbnRzIiwiX3BhcnNlRXZlbnRzIiwiY29uc29sZSIsImRlYnVnIiwibGVuZ3RoIiwicmVzdWx0IiwiaSIsImFjdGlvbiIsInNlbGVjdG9yIiwidmFsdWUiLCJocmVmIiwia2V5Q29kZSIsInRhZ05hbWUiLCJmcmFtZUlkIiwiZnJhbWVVcmwiLCJfc2V0RnJhbWVzIiwicHVzaCIsIl9oYW5kbGVLZXlEb3duIiwiX2hhbmRsZUNsaWNrIiwiX2hhbmRsZUNoYW5nZSIsInBwdHJBY3Rpb25zIiwiR09UTyIsIl9oYW5kbGVHb3RvIiwiVklFV1BPUlQiLCJfaGFuZGxlVmlld3BvcnQiLCJ3aWR0aCIsImhlaWdodCIsIk5BVklHQVRJT04iLCJfaGFuZGxlV2FpdEZvck5hdmlnYXRpb24iLCJTQ1JFRU5TSE9UIiwiX2hhbmRsZVNjcmVlbnNob3QiLCJsb2ciLCJibG9jayIsIkJsb2NrIiwidHlwZSIsIk5BVklHQVRJT05fUFJPTUlTRSIsInVuc2hpZnQiLCJpbmRlbnQiLCJuZXdMaW5lIiwibGluZXMiLCJnZXRMaW5lcyIsImxpbmUiLCJkb21FdmVudHMiLCJDSEFOR0UiLCJhZGRMaW5lIiwiQ0xJQ0siXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7QUFDQTs7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QyxNLEVBQVE7QUFDOUI7QUFDRDs7O3NDQUVrQmxDLE8sRUFBUztBQUMxQixVQUFJd0MsY0FBSjtBQUNBQSxjQUFRLElBQUlDLGVBQUosQ0FBVSxLQUFLckMsUUFBZixFQUF5QjtBQUM3QnNDLGNBQU1kLHNCQUFZUyxVQURXO0FBRTdCcEI7QUFGNkIsT0FBekIsQ0FBUjtBQUlBLFdBQUtYLGtCQUFMO0FBQ0EsYUFBT2tDLEtBQVA7QUFDRDs7OytDQUUyQixDQUMzQjs7OzRDQUV3QixDQUN4Qjs7O2dEQUU0QixDQUM1Qjs7Ozs7a0JBaklrQnpDLGEiLCJmaWxlIjoiLi9zcmMvY29kZS1nZW5lcmF0b3IvQ29kZUdlbmVyYXRvci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkb21FdmVudHMgZnJvbSAnLi9kb20tZXZlbnRzLXRvLXJlY29yZCdcbmltcG9ydCBwcHRyQWN0aW9ucyBmcm9tICcuL3BwdHItYWN0aW9ucydcbmltcG9ydCBCbG9jayBmcm9tICcuL0Jsb2NrJ1xuXG5jb25zdCBmZWF0dXJlVGl0bGUgPSBgRmVhdHVyZTogbXkgZmVhdHVyZSBuYW1lXFxuXFx0U2NlbmFyaW86IG15IHNjZW5hcmlvXFxuYFxuXG5leHBvcnQgY29uc3QgZGVmYXVsdHMgPSB7XG4gIHdyYXBBc3luYzogdHJ1ZSxcbiAgaGVhZGxlc3M6IHRydWUsXG4gIHdhaXRGb3JOYXZpZ2F0aW9uOiB0cnVlLFxuICB3YWl0Rm9yU2VsZWN0b3JPbkNsaWNrOiB0cnVlLFxuICBibGFua0xpbmVzQmV0d2VlbkJsb2NrczogdHJ1ZSxcbiAgZGF0YUF0dHJpYnV0ZTogJydcbn1cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ29kZUdlbmVyYXRvciB7XG4gIGNvbnN0cnVjdG9yIChvcHRpb25zKSB7XG4gICAgdGhpcy5fb3B0aW9ucyA9IE9iamVjdC5hc3NpZ24oZGVmYXVsdHMsIG9wdGlvbnMpXG4gICAgdGhpcy5fYmxvY2tzID0gW11cbiAgICB0aGlzLl9mcmFtZSA9ICdwYWdlJ1xuICAgIHRoaXMuX2ZyYW1lSWQgPSAwXG4gICAgdGhpcy5fYWxsRnJhbWVzID0ge31cbiAgICB0aGlzLl9zY3JlZW5zaG90Q291bnRlciA9IDFcblxuICAgIHRoaXMuX2hhc05hdmlnYXRpb24gPSBmYWxzZVxuICB9XG5cbiAgZ2VuZXJhdGUgKGV2ZW50cykge1xuICAgIHJldHVybiBmZWF0dXJlVGl0bGUgKyB0aGlzLl9wYXJzZUV2ZW50cyhldmVudHMpXG4gIH1cblxuICBfcGFyc2VFdmVudHMgKGV2ZW50cykge1xuICAgIGNvbnNvbGUuZGVidWcoYGdlbmVyYXRpbmcgY29kZSBmb3IgJHtldmVudHMgPyBldmVudHMubGVuZ3RoIDogMH0gZXZlbnRzYClcbiAgICBsZXQgcmVzdWx0ID0gJydcblxuICAgIGlmICghZXZlbnRzKSByZXR1cm4gcmVzdWx0XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGV2ZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgY29uc3QgeyBhY3Rpb24sIHNlbGVjdG9yLCB2YWx1ZSwgaHJlZiwga2V5Q29kZSwgdGFnTmFtZSwgZnJhbWVJZCwgZnJhbWVVcmwgfSA9IGV2ZW50c1tpXVxuXG4gICAgICAvLyB3ZSBuZWVkIHRvIGtlZXAgYSBoYW5kbGUgb24gd2hhdCBmcmFtZXMgZXZlbnRzIG9yaWdpbmF0ZSBmcm9tXG4gICAgICB0aGlzLl9zZXRGcmFtZXMoZnJhbWVJZCwgZnJhbWVVcmwpXG5cbiAgICAgIHN3aXRjaCAoYWN0aW9uKSB7XG4gICAgICAgIGNhc2UgJ2tleWRvd24nOlxuICAgICAgICAgIGlmIChrZXlDb2RlID09PSA5KSB7IC8vIHRhYiBrZXlcbiAgICAgICAgICAgIHRoaXMuX2Jsb2Nrcy5wdXNoKHRoaXMuX2hhbmRsZUtleURvd24oc2VsZWN0b3IsIHZhbHVlLCBrZXlDb2RlKSlcbiAgICAgICAgICB9XG4gICAgICAgICAgYnJlYWtcbiAgICAgICAgY2FzZSAnY2xpY2snOlxuICAgICAgICAgIHRoaXMuX2Jsb2Nrcy5wdXNoKHRoaXMuX2hhbmRsZUNsaWNrKHNlbGVjdG9yLCBldmVudHMpKVxuICAgICAgICAgIGJyZWFrXG4gICAgICAgIGNhc2UgJ2NoYW5nZSc6XG4gICAgICAgICAgaWYgKHRhZ05hbWUgPT09ICdTRUxFQ1QnKSB7XG4gICAgICAgICAgICB0aGlzLl9ibG9ja3MucHVzaCh0aGlzLl9oYW5kbGVDaGFuZ2Uoc2VsZWN0b3IsIHZhbHVlKSlcbiAgICAgICAgICB9XG4gICAgICAgICAgYnJlYWtcbiAgICAgICAgY2FzZSBwcHRyQWN0aW9ucy5HT1RPOlxuICAgICAgICAgIHRoaXMuX2Jsb2Nrcy5wdXNoKHRoaXMuX2hhbmRsZUdvdG8oaHJlZiwgZnJhbWVJZCkpXG4gICAgICAgICAgYnJlYWtcbiAgICAgICAgY2FzZSBwcHRyQWN0aW9ucy5WSUVXUE9SVDpcbiAgICAgICAgICB0aGlzLl9ibG9ja3MucHVzaCgodGhpcy5faGFuZGxlVmlld3BvcnQodmFsdWUud2lkdGgsIHZhbHVlLmhlaWdodCkpKVxuICAgICAgICAgIGJyZWFrXG4gICAgICAgIGNhc2UgcHB0ckFjdGlvbnMuTkFWSUdBVElPTjpcbiAgICAgICAgICB0aGlzLl9ibG9ja3MucHVzaCh0aGlzLl9oYW5kbGVXYWl0Rm9yTmF2aWdhdGlvbigpKVxuICAgICAgICAgIHRoaXMuX2hhc05hdmlnYXRpb24gPSB0cnVlXG4gICAgICAgICAgYnJlYWtcbiAgICAgICAgY2FzZSBwcHRyQWN0aW9ucy5TQ1JFRU5TSE9UOlxuICAgICAgICAgIHRoaXMuX2Jsb2Nrcy5wdXNoKHRoaXMuX2hhbmRsZVNjcmVlbnNob3QodmFsdWUpKVxuICAgICAgICAgIGJyZWFrXG4gICAgICB9XG4gICAgfVxuICAgIGNvbnNvbGUubG9nKHRoaXMuX2Jsb2NrcylcbiAgICBpZiAodGhpcy5faGFzTmF2aWdhdGlvbiAmJiB0aGlzLl9vcHRpb25zLndhaXRGb3JOYXZpZ2F0aW9uKSB7XG4gICAgICBjb25zb2xlLmRlYnVnKCdBZGRpbmcgbmF2aWdhdGlvblByb21pc2UgZGVjbGFyYXRpb24nKVxuICAgICAgY29uc3QgYmxvY2sgPSBuZXcgQmxvY2sodGhpcy5fZnJhbWVJZCwgeyB0eXBlOiBwcHRyQWN0aW9ucy5OQVZJR0FUSU9OX1BST01JU0UsIHZhbHVlOiAnY29uc3QgbmF2aWdhdGlvblByb21pc2UgPSBwYWdlLndhaXRGb3JOYXZpZ2F0aW9uKCknIH0pXG4gICAgICB0aGlzLl9ibG9ja3MudW5zaGlmdChibG9jaylcbiAgICB9XG5cbiAgICBjb25zb2xlLmRlYnVnKCdwb3N0IHByb2Nlc3NpbmcgYmxvY2tzOicsIHRoaXMuX2Jsb2NrcylcblxuICAgIGNvbnN0IGluZGVudCA9IHRoaXMuX29wdGlvbnMud3JhcEFzeW5jID8gJyAgJyA6ICcnXG4gICAgY29uc3QgbmV3TGluZSA9IGBcXG5gXG5cbiAgICBmb3IgKGxldCBibG9jayBvZiB0aGlzLl9ibG9ja3MpIHtcbiAgICAgIGNvbnN0IGxpbmVzID0gYmxvY2suZ2V0TGluZXMoKVxuICAgICAgZm9yIChsZXQgbGluZSBvZiBsaW5lcykge1xuICAgICAgICByZXN1bHQgKz0gaW5kZW50ICsgbGluZS52YWx1ZSArIG5ld0xpbmVcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gcmVzdWx0XG4gIH1cblxuICBfc2V0RnJhbWVzIChmcmFtZUlkLCBmcmFtZVVybCkge1xuICAgIGlmIChmcmFtZUlkICYmIGZyYW1lSWQgIT09IDApIHtcbiAgICAgIHRoaXMuX2ZyYW1lSWQgPSBmcmFtZUlkXG4gICAgICB0aGlzLl9mcmFtZSA9IGBmcmFtZV8ke2ZyYW1lSWR9YFxuICAgICAgdGhpcy5fYWxsRnJhbWVzW2ZyYW1lSWRdID0gZnJhbWVVcmxcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fZnJhbWVJZCA9IDBcbiAgICAgIHRoaXMuX2ZyYW1lID0gJ3BhZ2UnXG4gICAgfVxuICB9XG5cbiAgX2hhbmRsZUtleURvd24gKHNlbGVjdG9yLCB2YWx1ZSkge1xuICAgIHJldHVybiBuZXcgQmxvY2sodGhpcy5fZnJhbWVJZCwgeyB0eXBlOiBkb21FdmVudHMuQ0hBTkdFLCB2YWx1ZTogYEdpdmVuIEkgdHlwZSAnJHt2YWx1ZX0nIGluIGZpZWxkICcke3NlbGVjdG9yfSdgIH0pXG4gIH1cblxuICBfaGFuZGxlQ2xpY2sgKHNlbGVjdG9yKSB7XG4gICAgY29uc3QgYmxvY2sgPSBuZXcgQmxvY2sodGhpcy5fZnJhbWVJZClcbiAgICBpZiAodGhpcy5fb3B0aW9ucy53YWl0Rm9yU2VsZWN0b3JPbkNsaWNrKSB7XG4gICAgICBibG9jay5hZGRMaW5lKHsgdHlwZTogZG9tRXZlbnRzLkNMSUNLLCB2YWx1ZTogYEdpdmVuIEkgY2xpY2sgb24gJyR7c2VsZWN0b3J9J2AgfSlcbiAgICB9XG4gICAgcmV0dXJuIGJsb2NrXG4gIH1cbiAgX2hhbmRsZUNoYW5nZSAoc2VsZWN0b3IsIHZhbHVlKSB7XG4gICAgcmV0dXJuIG5ldyBCbG9jayh0aGlzLl9mcmFtZUlkLCB7IHR5cGU6IGRvbUV2ZW50cy5DSEFOR0UsIHZhbHVlOiBgR2l2ZW4gSSB0eXBlICcke3ZhbHVlfScgaW4gZmllbGQgJyR7c2VsZWN0b3J9J2AgfSlcbiAgfVxuICBfaGFuZGxlR290byAoaHJlZikge1xuICAgIHJldHVybiBuZXcgQmxvY2sodGhpcy5fZnJhbWVJZCwgeyB0eXBlOiBwcHRyQWN0aW9ucy5HT1RPLCB2YWx1ZTogYEdpdmVuIEkgZ28gb24gJyR7aHJlZn0nYCB9KVxuICB9XG5cbiAgX2hhbmRsZVZpZXdwb3J0ICh3aWR0aCwgaGVpZ2h0KSB7XG4gICAgLy9yZXR1cm4gbmV3IEJsb2NrKHRoaXMuX2ZyYW1lSWQsIHsgdHlwZTogcHB0ckFjdGlvbnMuVklFV1BPUlQsIHZhbHVlOiBgYXdhaXQgJHt0aGlzLl9mcmFtZX0uc2V0Vmlld3BvcnQoeyB3aWR0aDogJHt3aWR0aH0sIGhlaWdodDogJHtoZWlnaHR9IH0pYCB9KVxuICB9XG5cbiAgX2hhbmRsZVNjcmVlbnNob3QgKG9wdGlvbnMpIHtcbiAgICBsZXQgYmxvY2tcbiAgICBibG9jayA9IG5ldyBCbG9jayh0aGlzLl9mcmFtZUlkLCB7XG4gICAgICAgIHR5cGU6IHBwdHJBY3Rpb25zLlNDUkVFTlNIT1QsXG4gICAgICAgIHZhbHVlOiBgVGFrZSBhIHNjcmVlbnNob3QgYFxuICAgIH0pXG4gICAgdGhpcy5fc2NyZWVuc2hvdENvdW50ZXIrK1xuICAgIHJldHVybiBibG9ja1xuICB9XG5cbiAgX2hhbmRsZVdhaXRGb3JOYXZpZ2F0aW9uICgpIHtcbiAgfVxuXG4gIF9wb3N0UHJvY2Vzc1NldEZyYW1lcyAoKSB7XG4gIH1cblxuICBfcG9zdFByb2Nlc3NBZGRCbGFua0xpbmVzICgpIHtcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/code-generator/CodeGenerator.js\n");

/***/ })

})