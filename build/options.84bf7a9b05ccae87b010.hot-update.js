webpackHotUpdate("options",{

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./src/options/components/App.vue?vue&type=template&id=54b791b2&scoped=true&":
/*!*****************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/options/components/App.vue?vue&type=template&id=54b791b2&scoped=true& ***!
  \*****************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return staticRenderFns; });\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"options\" }, [\n    _c(\"div\", { staticClass: \"container\" }, [\n      _c(\"div\", { staticClass: \"header\" }, [\n        _vm._v(\"\\n      Behat Recorder Options\\n      \"),\n        _c(\n          \"small\",\n          {\n            directives: [\n              {\n                name: \"show\",\n                rawName: \"v-show\",\n                value: _vm.saving,\n                expression: \"saving\"\n              }\n            ],\n            staticClass: \"saving-badge text-muted\"\n          },\n          [_vm._v(\"\\n        Saving...\\n      \")]\n        )\n      ]),\n      _vm._v(\" \"),\n      !_vm.loading\n        ? _c(\"div\", { staticClass: \"content\" }, [\n            _c(\"div\", { staticClass: \"settings-block\" }, [\n              _c(\"h4\", { staticClass: \"settings-block-title\" }, [\n                _vm._v(\"\\n          Code Recorder settings\\n        \")\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"settings-block-main\" }, [\n                _c(\"div\", { staticClass: \"settings-group\" }, [\n                  _c(\"label\", { staticClass: \"settings-label\" }, [\n                    _vm._v(\"custom data attribute\")\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.options.code.dataAttribute,\n                        expression: \"options.code.dataAttribute\"\n                      }\n                    ],\n                    attrs: {\n                      id: \"options-code-dataAttribute\",\n                      type: \"text\",\n                      placeholder: \"your custom data-* attribute\"\n                    },\n                    domProps: { value: _vm.options.code.dataAttribute },\n                    on: {\n                      change: _vm.save,\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(\n                          _vm.options.code,\n                          \"dataAttribute\",\n                          $event.target.value\n                        )\n                      }\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _vm._m(0)\n                ])\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"settings-block\" }, [\n              _c(\"h4\", { staticClass: \"settings-block-title\" }, [\n                _vm._v(\"\\n          Code Generator settings\\n        \")\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"settings-block-main\" }, [\n                _c(\"div\", { staticClass: \"settings-group\" }, [\n                  _c(\"label\", [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.options.code.wrapAsync,\n                          expression: \"options.code.wrapAsync\"\n                        }\n                      ],\n                      attrs: { id: \"options-code-wrapAsync\", type: \"checkbox\" },\n                      domProps: {\n                        checked: Array.isArray(_vm.options.code.wrapAsync)\n                          ? _vm._i(_vm.options.code.wrapAsync, null) > -1\n                          : _vm.options.code.wrapAsync\n                      },\n                      on: {\n                        change: [\n                          function($event) {\n                            var $$a = _vm.options.code.wrapAsync,\n                              $$el = $event.target,\n                              $$c = $$el.checked ? true : false\n                            if (Array.isArray($$a)) {\n                              var $$v = null,\n                                $$i = _vm._i($$a, $$v)\n                              if ($$el.checked) {\n                                $$i < 0 &&\n                                  _vm.$set(\n                                    _vm.options.code,\n                                    \"wrapAsync\",\n                                    $$a.concat([$$v])\n                                  )\n                              } else {\n                                $$i > -1 &&\n                                  _vm.$set(\n                                    _vm.options.code,\n                                    \"wrapAsync\",\n                                    $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                                  )\n                              }\n                            } else {\n                              _vm.$set(_vm.options.code, \"wrapAsync\", $$c)\n                            }\n                          },\n                          _vm.save\n                        ]\n                      }\n                    }),\n                    _vm._v(\n                      \"\\n              wrap code in async function\\n            \"\n                    )\n                  ])\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"settings-group\" }, [\n                  _c(\"label\", [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.options.code.headless,\n                          expression: \"options.code.headless\"\n                        }\n                      ],\n                      attrs: { id: \"options-code-headless\", type: \"checkbox\" },\n                      domProps: {\n                        checked: Array.isArray(_vm.options.code.headless)\n                          ? _vm._i(_vm.options.code.headless, null) > -1\n                          : _vm.options.code.headless\n                      },\n                      on: {\n                        change: [\n                          function($event) {\n                            var $$a = _vm.options.code.headless,\n                              $$el = $event.target,\n                              $$c = $$el.checked ? true : false\n                            if (Array.isArray($$a)) {\n                              var $$v = null,\n                                $$i = _vm._i($$a, $$v)\n                              if ($$el.checked) {\n                                $$i < 0 &&\n                                  _vm.$set(\n                                    _vm.options.code,\n                                    \"headless\",\n                                    $$a.concat([$$v])\n                                  )\n                              } else {\n                                $$i > -1 &&\n                                  _vm.$set(\n                                    _vm.options.code,\n                                    \"headless\",\n                                    $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                                  )\n                              }\n                            } else {\n                              _vm.$set(_vm.options.code, \"headless\", $$c)\n                            }\n                          },\n                          _vm.save\n                        ]\n                      }\n                    }),\n                    _vm._v(\"\\n              set \"),\n                    _c(\"code\", [_vm._v(\"headless\")]),\n                    _vm._v(\" in puppeteer launch options\\n            \")\n                  ])\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"settings-group\" }, [\n                  _c(\"label\", [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.options.code.waitForNavigation,\n                          expression: \"options.code.waitForNavigation\"\n                        }\n                      ],\n                      attrs: {\n                        id: \"options-code-waitForNavigation\",\n                        type: \"checkbox\"\n                      },\n                      domProps: {\n                        checked: Array.isArray(\n                          _vm.options.code.waitForNavigation\n                        )\n                          ? _vm._i(_vm.options.code.waitForNavigation, null) >\n                            -1\n                          : _vm.options.code.waitForNavigation\n                      },\n                      on: {\n                        change: [\n                          function($event) {\n                            var $$a = _vm.options.code.waitForNavigation,\n                              $$el = $event.target,\n                              $$c = $$el.checked ? true : false\n                            if (Array.isArray($$a)) {\n                              var $$v = null,\n                                $$i = _vm._i($$a, $$v)\n                              if ($$el.checked) {\n                                $$i < 0 &&\n                                  _vm.$set(\n                                    _vm.options.code,\n                                    \"waitForNavigation\",\n                                    $$a.concat([$$v])\n                                  )\n                              } else {\n                                $$i > -1 &&\n                                  _vm.$set(\n                                    _vm.options.code,\n                                    \"waitForNavigation\",\n                                    $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                                  )\n                              }\n                            } else {\n                              _vm.$set(\n                                _vm.options.code,\n                                \"waitForNavigation\",\n                                $$c\n                              )\n                            }\n                          },\n                          _vm.save\n                        ]\n                      }\n                    }),\n                    _vm._v(\"\\n              add \"),\n                    _c(\"code\", [_vm._v(\"waitForNavigation\")]),\n                    _vm._v(\" lines on navigation\\n            \")\n                  ])\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"settings-group\" }, [\n                  _c(\"label\", [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.options.code.waitForSelectorOnClick,\n                          expression: \"options.code.waitForSelectorOnClick\"\n                        }\n                      ],\n                      attrs: {\n                        id: \"options-code-waitForSelectorOnClick\",\n                        type: \"checkbox\"\n                      },\n                      domProps: {\n                        checked: Array.isArray(\n                          _vm.options.code.waitForSelectorOnClick\n                        )\n                          ? _vm._i(\n                              _vm.options.code.waitForSelectorOnClick,\n                              null\n                            ) > -1\n                          : _vm.options.code.waitForSelectorOnClick\n                      },\n                      on: {\n                        change: [\n                          function($event) {\n                            var $$a = _vm.options.code.waitForSelectorOnClick,\n                              $$el = $event.target,\n                              $$c = $$el.checked ? true : false\n                            if (Array.isArray($$a)) {\n                              var $$v = null,\n                                $$i = _vm._i($$a, $$v)\n                              if ($$el.checked) {\n                                $$i < 0 &&\n                                  _vm.$set(\n                                    _vm.options.code,\n                                    \"waitForSelectorOnClick\",\n                                    $$a.concat([$$v])\n                                  )\n                              } else {\n                                $$i > -1 &&\n                                  _vm.$set(\n                                    _vm.options.code,\n                                    \"waitForSelectorOnClick\",\n                                    $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                                  )\n                              }\n                            } else {\n                              _vm.$set(\n                                _vm.options.code,\n                                \"waitForSelectorOnClick\",\n                                $$c\n                              )\n                            }\n                          },\n                          _vm.save\n                        ]\n                      }\n                    }),\n                    _vm._v(\"\\n              add \"),\n                    _c(\"code\", [_vm._v(\"waitForSelector\")]),\n                    _vm._v(\" lines before every \"),\n                    _c(\"code\", [_vm._v(\"page.click()\")])\n                  ])\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"settings-group\" }, [\n                  _c(\"label\", [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.options.code.blankLinesBetweenBlocks,\n                          expression: \"options.code.blankLinesBetweenBlocks\"\n                        }\n                      ],\n                      attrs: {\n                        id: \"options-code-blankLinesBetweenBlocks\",\n                        type: \"checkbox\"\n                      },\n                      domProps: {\n                        checked: Array.isArray(\n                          _vm.options.code.blankLinesBetweenBlocks\n                        )\n                          ? _vm._i(\n                              _vm.options.code.blankLinesBetweenBlocks,\n                              null\n                            ) > -1\n                          : _vm.options.code.blankLinesBetweenBlocks\n                      },\n                      on: {\n                        change: [\n                          function($event) {\n                            var $$a = _vm.options.code.blankLinesBetweenBlocks,\n                              $$el = $event.target,\n                              $$c = $$el.checked ? true : false\n                            if (Array.isArray($$a)) {\n                              var $$v = null,\n                                $$i = _vm._i($$a, $$v)\n                              if ($$el.checked) {\n                                $$i < 0 &&\n                                  _vm.$set(\n                                    _vm.options.code,\n                                    \"blankLinesBetweenBlocks\",\n                                    $$a.concat([$$v])\n                                  )\n                              } else {\n                                $$i > -1 &&\n                                  _vm.$set(\n                                    _vm.options.code,\n                                    \"blankLinesBetweenBlocks\",\n                                    $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                                  )\n                              }\n                            } else {\n                              _vm.$set(\n                                _vm.options.code,\n                                \"blankLinesBetweenBlocks\",\n                                $$c\n                              )\n                            }\n                          },\n                          _vm.save\n                        ]\n                      }\n                    }),\n                    _vm._v(\n                      \"\\n              add blank lines between code blocks\\n            \"\n                    )\n                  ])\n                ])\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"settings-block\" }, [\n              _c(\"h4\", { staticClass: \"settings-block-title\" }, [\n                _vm._v(\"\\n          Extension settings\\n        \")\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"settings-block-main\" }, [\n                _c(\"div\", { staticClass: \"settings-group\" }, [\n                  _c(\"label\", [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.options.extension.telemetry,\n                          expression: \"options.extension.telemetry\"\n                        }\n                      ],\n                      attrs: { id: \"options-telemetry\", type: \"checkbox\" },\n                      domProps: {\n                        checked: Array.isArray(_vm.options.extension.telemetry)\n                          ? _vm._i(_vm.options.extension.telemetry, null) > -1\n                          : _vm.options.extension.telemetry\n                      },\n                      on: {\n                        change: [\n                          function($event) {\n                            var $$a = _vm.options.extension.telemetry,\n                              $$el = $event.target,\n                              $$c = $$el.checked ? true : false\n                            if (Array.isArray($$a)) {\n                              var $$v = null,\n                                $$i = _vm._i($$a, $$v)\n                              if ($$el.checked) {\n                                $$i < 0 &&\n                                  _vm.$set(\n                                    _vm.options.extension,\n                                    \"telemetry\",\n                                    $$a.concat([$$v])\n                                  )\n                              } else {\n                                $$i > -1 &&\n                                  _vm.$set(\n                                    _vm.options.extension,\n                                    \"telemetry\",\n                                    $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                                  )\n                              }\n                            } else {\n                              _vm.$set(_vm.options.extension, \"telemetry\", $$c)\n                            }\n                          },\n                          _vm.save\n                        ]\n                      }\n                    }),\n                    _vm._v(\n                      \"\\n              Allow recording of usage telemetry\\n            \"\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"br\"),\n                  _vm._v(\" \"),\n                  _c(\"small\", [\n                    _vm._v(\n                      \"We only record clicks for basic product development, no website content or input data. Data is never, ever shared with 3rd parties.\"\n                    )\n                  ])\n                ])\n              ])\n            ])\n          ])\n        : _vm._e(),\n      _vm._v(\" \"),\n      _vm._m(1)\n    ])\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"small\", [\n      _vm._v(\"Define a \"),\n      _c(\"code\", [_vm._v(\"data-*\")]),\n      _vm._v(\n        \" attribute that we'll attempt to use when selecting the elements. This is handy\\n              when React or Vue based apps generate random class names.\"\n      )\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"footer\" }, [\n      _vm._v(\"\\n      sponsored by\\n      \"),\n      _c(\"a\", { attrs: { href: \"https://checklyhq.com\", target: \"_blank\" } }, [\n        _c(\"img\", { attrs: { src: \"/images/text_racoon_logo.svg\", alt: \"\" } })\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./src/options/components/App.vue?vue&type=template&id=54b791b2&scoped=true&\n");

/***/ })

})