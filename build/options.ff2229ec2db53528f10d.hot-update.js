webpackHotUpdate("options",{

/***/ "./src/code-generator/CodeGenerator.js":
/*!*********************************************!*\
  !*** ./src/code-generator/CodeGenerator.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defaults = undefined;\n\nvar _getIterator2 = __webpack_require__(/*! babel-runtime/core-js/get-iterator */ \"./node_modules/babel-runtime/core-js/get-iterator.js\");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nvar _assign = __webpack_require__(/*! babel-runtime/core-js/object/assign */ \"./node_modules/babel-runtime/core-js/object/assign.js\");\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _classCallCheck2 = __webpack_require__(/*! babel-runtime/helpers/classCallCheck */ \"./node_modules/babel-runtime/helpers/classCallCheck.js\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(/*! babel-runtime/helpers/createClass */ \"./node_modules/babel-runtime/helpers/createClass.js\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _domEventsToRecord = __webpack_require__(/*! ./dom-events-to-record */ \"./src/code-generator/dom-events-to-record.js\");\n\nvar _domEventsToRecord2 = _interopRequireDefault(_domEventsToRecord);\n\nvar _pptrActions = __webpack_require__(/*! ./pptr-actions */ \"./src/code-generator/pptr-actions.js\");\n\nvar _pptrActions2 = _interopRequireDefault(_pptrActions);\n\nvar _Block = __webpack_require__(/*! ./Block */ \"./src/code-generator/Block.js\");\n\nvar _Block2 = _interopRequireDefault(_Block);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar featureTitle = 'Feature: my feature name\\n\\tScenario: my scenario\\n';\n\nvar defaults = exports.defaults = {\n  wrapAsync: true,\n  headless: true,\n  waitForNavigation: true,\n  waitForSelectorOnClick: true,\n  blankLinesBetweenBlocks: true,\n  dataAttribute: ''\n};\n\nvar CodeGenerator = function () {\n  function CodeGenerator(options) {\n    (0, _classCallCheck3.default)(this, CodeGenerator);\n\n    this._options = (0, _assign2.default)(defaults, options);\n    this._blocks = [];\n    this._frame = 'page';\n    this._frameId = 0;\n    this._allFrames = {};\n    this._screenshotCounter = 1;\n\n    this._hasNavigation = false;\n  }\n\n  (0, _createClass3.default)(CodeGenerator, [{\n    key: 'generate',\n    value: function generate(events) {\n      return featureTitle + this._parseEvents(events);\n    }\n  }, {\n    key: '_parseEvents',\n    value: function _parseEvents(events) {\n      console.debug('generating code for ' + (events ? events.length : 0) + ' events');\n      var result = '';\n\n      if (!events) return result;\n\n      for (var i = 0; i < events.length; i++) {\n        var _events$i = events[i],\n            action = _events$i.action,\n            selector = _events$i.selector,\n            value = _events$i.value,\n            href = _events$i.href,\n            keyCode = _events$i.keyCode,\n            tagName = _events$i.tagName,\n            frameId = _events$i.frameId,\n            frameUrl = _events$i.frameUrl;\n\n        // we need to keep a handle on what frames events originate from\n\n        this._setFrames(frameId, frameUrl);\n\n        switch (action) {\n          case 'keydown':\n            if (keyCode === 9) {\n              // tab key\n              this._blocks.push(this._handleKeyDown(selector, value, keyCode));\n            }\n            break;\n          case 'click':\n            this._blocks.push(this._handleClick(selector, events));\n            break;\n          case 'change':\n            if (tagName === 'SELECT') {\n              this._blocks.push(this._handleChange(selector, value));\n            }\n            break;\n          case _pptrActions2.default.GOTO:\n            this._blocks.push(this._handleGoto(href, frameId));\n            break;\n          case _pptrActions2.default.VIEWPORT:\n            this._blocks.push(this._handleViewport(value.width, value.height));\n            break;\n          case _pptrActions2.default.NAVIGATION:\n            this._blocks.push(this._handleWaitForNavigation());\n            this._hasNavigation = true;\n            break;\n          case _pptrActions2.default.SCREENSHOT:\n            this._blocks.push(this._handleScreenshot(value));\n            break;\n        }\n      }\n      console.log(this._blocks);\n      if (this._hasNavigation && this._options.waitForNavigation) {\n        console.debug('Adding navigationPromise declaration');\n        var block = new _Block2.default(this._frameId, { type: _pptrActions2.default.NAVIGATION_PROMISE, value: 'const navigationPromise = page.waitForNavigation()' });\n        this._blocks.unshift(block);\n      }\n\n      console.debug('post processing blocks:', this._blocks);\n      this._postProcess();\n\n      var indent = this._options.wrapAsync ? '  ' : '';\n      var newLine = '\\n';\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = (0, _getIterator3.default)(this._blocks), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var _block = _step.value;\n\n          var lines = _block.getLines();\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = (0, _getIterator3.default)(lines), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var line = _step2.value;\n\n              result += indent + line.value + newLine;\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: '_setFrames',\n    value: function _setFrames(frameId, frameUrl) {\n      if (frameId && frameId !== 0) {\n        this._frameId = frameId;\n        this._frame = 'frame_' + frameId;\n        this._allFrames[frameId] = frameUrl;\n      } else {\n        this._frameId = 0;\n        this._frame = 'page';\n      }\n    }\n  }, {\n    key: '_handleKeyDown',\n    value: function _handleKeyDown(selector, value) {\n      return new _Block2.default(this._frameId, { type: _domEventsToRecord2.default.CHANGE, value: 'Given I type \\'' + value + '\\' in field \\'' + selector + '\\'' });\n    }\n  }, {\n    key: '_handleClick',\n    value: function _handleClick(selector) {\n      var block = new _Block2.default(this._frameId);\n      if (this._options.waitForSelectorOnClick) {\n        block.addLine({ type: _domEventsToRecord2.default.CLICK, value: 'Given I click on \\'' + selector + '\\'' });\n      }\n      return block;\n    }\n  }, {\n    key: '_handleChange',\n    value: function _handleChange(selector, value) {\n      return new _Block2.default(this._frameId, { type: _domEventsToRecord2.default.CHANGE, value: 'Given I type \\'' + value + '\\' in field \\'' + selector + '\\'' });\n    }\n  }, {\n    key: '_handleGoto',\n    value: function _handleGoto(href) {\n      return new _Block2.default(this._frameId, { type: _pptrActions2.default.GOTO, value: 'Given I go on \\'' + href + '\\'' });\n    }\n  }, {\n    key: '_handleViewport',\n    value: function _handleViewport(width, height) {\n      //return new Block(this._frameId, { type: pptrActions.VIEWPORT, value: `await ${this._frame}.setViewport({ width: ${width}, height: ${height} })` })\n    }\n  }, {\n    key: '_handleScreenshot',\n    value: function _handleScreenshot(options) {\n      var block = void 0;\n      block = new _Block2.default(this._frameId, {\n        type: _pptrActions2.default.SCREENSHOT,\n        value: 'Take a screenshot '\n      });\n      this._screenshotCounter++;\n      return block;\n    }\n  }, {\n    key: '_handleWaitForNavigation',\n    value: function _handleWaitForNavigation() {}\n  }, {\n    key: '_postProcessSetFrames',\n    value: function _postProcessSetFrames() {}\n  }, {\n    key: '_postProcessAddBlankLines',\n    value: function _postProcessAddBlankLines() {}\n  }]);\n  return CodeGenerator;\n}();\n\nexports.default = CodeGenerator;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29kZS1nZW5lcmF0b3IvQ29kZUdlbmVyYXRvci5qcz85NDIyIl0sIm5hbWVzIjpbImZlYXR1cmVUaXRsZSIsImRlZmF1bHRzIiwid3JhcEFzeW5jIiwiaGVhZGxlc3MiLCJ3YWl0Rm9yTmF2aWdhdGlvbiIsIndhaXRGb3JTZWxlY3Rvck9uQ2xpY2siLCJibGFua0xpbmVzQmV0d2VlbkJsb2NrcyIsImRhdGFBdHRyaWJ1dGUiLCJDb2RlR2VuZXJhdG9yIiwib3B0aW9ucyIsIl9vcHRpb25zIiwiX2Jsb2NrcyIsIl9mcmFtZSIsIl9mcmFtZUlkIiwiX2FsbEZyYW1lcyIsIl9zY3JlZW5zaG90Q291bnRlciIsIl9oYXNOYXZpZ2F0aW9uIiwiZXZlbnRzIiwiX3BhcnNlRXZlbnRzIiwiY29uc29sZSIsImRlYnVnIiwibGVuZ3RoIiwicmVzdWx0IiwiaSIsImFjdGlvbiIsInNlbGVjdG9yIiwidmFsdWUiLCJocmVmIiwia2V5Q29kZSIsInRhZ05hbWUiLCJmcmFtZUlkIiwiZnJhbWVVcmwiLCJfc2V0RnJhbWVzIiwicHVzaCIsIl9oYW5kbGVLZXlEb3duIiwiX2hhbmRsZUNsaWNrIiwiX2hhbmRsZUNoYW5nZSIsInBwdHJBY3Rpb25zIiwiR09UTyIsIl9oYW5kbGVHb3RvIiwiVklFV1BPUlQiLCJfaGFuZGxlVmlld3BvcnQiLCJ3aWR0aCIsImhlaWdodCIsIk5BVklHQVRJT04iLCJfaGFuZGxlV2FpdEZvck5hdmlnYXRpb24iLCJTQ1JFRU5TSE9UIiwiX2hhbmRsZVNjcmVlbnNob3QiLCJsb2ciLCJibG9jayIsIkJsb2NrIiwidHlwZSIsIk5BVklHQVRJT05fUFJPTUlTRSIsInVuc2hpZnQiLCJfcG9zdFByb2Nlc3MiLCJpbmRlbnQiLCJuZXdMaW5lIiwibGluZXMiLCJnZXRMaW5lcyIsImxpbmUiLCJkb21FdmVudHMiLCJDSEFOR0UiLCJhZGRMaW5lIiwiQ0xJQ0siXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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QUF6QixDQUFQO0FBQ0Q7OztvQ0FFZ0JlLEssRUFBT0MsTSxFQUFRO0FBQzlCO0FBQ0Q7OztzQ0FFa0JsQyxPLEVBQVM7QUFDMUIsVUFBSXdDLGNBQUo7QUFDQUEsY0FBUSxJQUFJQyxlQUFKLENBQVUsS0FBS3JDLFFBQWYsRUFBeUI7QUFDN0JzQyxjQUFNZCxzQkFBWVMsVUFEVztBQUU3QnBCO0FBRjZCLE9BQXpCLENBQVI7QUFJQSxXQUFLWCxrQkFBTDtBQUNBLGFBQU9rQyxLQUFQO0FBQ0Q7OzsrQ0FFMkIsQ0FDM0I7Ozs0Q0FFd0IsQ0FDeEI7OztnREFFNEIsQ0FDNUI7Ozs7O2tCQWxJa0J6QyxhIiwiZmlsZSI6Ii4vc3JjL2NvZGUtZ2VuZXJhdG9yL0NvZGVHZW5lcmF0b3IuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZG9tRXZlbnRzIGZyb20gJy4vZG9tLWV2ZW50cy10by1yZWNvcmQnXG5pbXBvcnQgcHB0ckFjdGlvbnMgZnJvbSAnLi9wcHRyLWFjdGlvbnMnXG5pbXBvcnQgQmxvY2sgZnJvbSAnLi9CbG9jaydcblxuY29uc3QgZmVhdHVyZVRpdGxlID0gYEZlYXR1cmU6IG15IGZlYXR1cmUgbmFtZVxcblxcdFNjZW5hcmlvOiBteSBzY2VuYXJpb1xcbmBcblxuZXhwb3J0IGNvbnN0IGRlZmF1bHRzID0ge1xuICB3cmFwQXN5bmM6IHRydWUsXG4gIGhlYWRsZXNzOiB0cnVlLFxuICB3YWl0Rm9yTmF2aWdhdGlvbjogdHJ1ZSxcbiAgd2FpdEZvclNlbGVjdG9yT25DbGljazogdHJ1ZSxcbiAgYmxhbmtMaW5lc0JldHdlZW5CbG9ja3M6IHRydWUsXG4gIGRhdGFBdHRyaWJ1dGU6ICcnXG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENvZGVHZW5lcmF0b3Ige1xuICBjb25zdHJ1Y3RvciAob3B0aW9ucykge1xuICAgIHRoaXMuX29wdGlvbnMgPSBPYmplY3QuYXNzaWduKGRlZmF1bHRzLCBvcHRpb25zKVxuICAgIHRoaXMuX2Jsb2NrcyA9IFtdXG4gICAgdGhpcy5fZnJhbWUgPSAncGFnZSdcbiAgICB0aGlzLl9mcmFtZUlkID0gMFxuICAgIHRoaXMuX2FsbEZyYW1lcyA9IHt9XG4gICAgdGhpcy5fc2NyZWVuc2hvdENvdW50ZXIgPSAxXG5cbiAgICB0aGlzLl9oYXNOYXZpZ2F0aW9uID0gZmFsc2VcbiAgfVxuXG4gIGdlbmVyYXRlIChldmVudHMpIHtcbiAgICByZXR1cm4gZmVhdHVyZVRpdGxlICsgdGhpcy5fcGFyc2VFdmVudHMoZXZlbnRzKVxuICB9XG5cbiAgX3BhcnNlRXZlbnRzIChldmVudHMpIHtcbiAgICBjb25zb2xlLmRlYnVnKGBnZW5lcmF0aW5nIGNvZGUgZm9yICR7ZXZlbnRzID8gZXZlbnRzLmxlbmd0aCA6IDB9IGV2ZW50c2ApXG4gICAgbGV0IHJlc3VsdCA9ICcnXG5cbiAgICBpZiAoIWV2ZW50cykgcmV0dXJuIHJlc3VsdFxuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBldmVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGNvbnN0IHsgYWN0aW9uLCBzZWxlY3RvciwgdmFsdWUsIGhyZWYsIGtleUNvZGUsIHRhZ05hbWUsIGZyYW1lSWQsIGZyYW1lVXJsIH0gPSBldmVudHNbaV1cblxuICAgICAgLy8gd2UgbmVlZCB0byBrZWVwIGEgaGFuZGxlIG9uIHdoYXQgZnJhbWVzIGV2ZW50cyBvcmlnaW5hdGUgZnJvbVxuICAgICAgdGhpcy5fc2V0RnJhbWVzKGZyYW1lSWQsIGZyYW1lVXJsKVxuXG4gICAgICBzd2l0Y2ggKGFjdGlvbikge1xuICAgICAgICBjYXNlICdrZXlkb3duJzpcbiAgICAgICAgICBpZiAoa2V5Q29kZSA9PT0gOSkgeyAvLyB0YWIga2V5XG4gICAgICAgICAgICB0aGlzLl9ibG9ja3MucHVzaCh0aGlzLl9oYW5kbGVLZXlEb3duKHNlbGVjdG9yLCB2YWx1ZSwga2V5Q29kZSkpXG4gICAgICAgICAgfVxuICAgICAgICAgIGJyZWFrXG4gICAgICAgIGNhc2UgJ2NsaWNrJzpcbiAgICAgICAgICB0aGlzLl9ibG9ja3MucHVzaCh0aGlzLl9oYW5kbGVDbGljayhzZWxlY3RvciwgZXZlbnRzKSlcbiAgICAgICAgICBicmVha1xuICAgICAgICBjYXNlICdjaGFuZ2UnOlxuICAgICAgICAgIGlmICh0YWdOYW1lID09PSAnU0VMRUNUJykge1xuICAgICAgICAgICAgdGhpcy5fYmxvY2tzLnB1c2godGhpcy5faGFuZGxlQ2hhbmdlKHNlbGVjdG9yLCB2YWx1ZSkpXG4gICAgICAgICAgfVxuICAgICAgICAgIGJyZWFrXG4gICAgICAgIGNhc2UgcHB0ckFjdGlvbnMuR09UTzpcbiAgICAgICAgICB0aGlzLl9ibG9ja3MucHVzaCh0aGlzLl9oYW5kbGVHb3RvKGhyZWYsIGZyYW1lSWQpKVxuICAgICAgICAgIGJyZWFrXG4gICAgICAgIGNhc2UgcHB0ckFjdGlvbnMuVklFV1BPUlQ6XG4gICAgICAgICAgdGhpcy5fYmxvY2tzLnB1c2goKHRoaXMuX2hhbmRsZVZpZXdwb3J0KHZhbHVlLndpZHRoLCB2YWx1ZS5oZWlnaHQpKSlcbiAgICAgICAgICBicmVha1xuICAgICAgICBjYXNlIHBwdHJBY3Rpb25zLk5BVklHQVRJT046XG4gICAgICAgICAgdGhpcy5fYmxvY2tzLnB1c2godGhpcy5faGFuZGxlV2FpdEZvck5hdmlnYXRpb24oKSlcbiAgICAgICAgICB0aGlzLl9oYXNOYXZpZ2F0aW9uID0gdHJ1ZVxuICAgICAgICAgIGJyZWFrXG4gICAgICAgIGNhc2UgcHB0ckFjdGlvbnMuU0NSRUVOU0hPVDpcbiAgICAgICAgICB0aGlzLl9ibG9ja3MucHVzaCh0aGlzLl9oYW5kbGVTY3JlZW5zaG90KHZhbHVlKSlcbiAgICAgICAgICBicmVha1xuICAgICAgfVxuICAgIH1cbiAgICBjb25zb2xlLmxvZyh0aGlzLl9ibG9ja3MpXG4gICAgaWYgKHRoaXMuX2hhc05hdmlnYXRpb24gJiYgdGhpcy5fb3B0aW9ucy53YWl0Rm9yTmF2aWdhdGlvbikge1xuICAgICAgY29uc29sZS5kZWJ1ZygnQWRkaW5nIG5hdmlnYXRpb25Qcm9taXNlIGRlY2xhcmF0aW9uJylcbiAgICAgIGNvbnN0IGJsb2NrID0gbmV3IEJsb2NrKHRoaXMuX2ZyYW1lSWQsIHsgdHlwZTogcHB0ckFjdGlvbnMuTkFWSUdBVElPTl9QUk9NSVNFLCB2YWx1ZTogJ2NvbnN0IG5hdmlnYXRpb25Qcm9taXNlID0gcGFnZS53YWl0Rm9yTmF2aWdhdGlvbigpJyB9KVxuICAgICAgdGhpcy5fYmxvY2tzLnVuc2hpZnQoYmxvY2spXG4gICAgfVxuXG4gICAgY29uc29sZS5kZWJ1ZygncG9zdCBwcm9jZXNzaW5nIGJsb2NrczonLCB0aGlzLl9ibG9ja3MpXG4gICAgdGhpcy5fcG9zdFByb2Nlc3MoKVxuXG4gICAgY29uc3QgaW5kZW50ID0gdGhpcy5fb3B0aW9ucy53cmFwQXN5bmMgPyAnICAnIDogJydcbiAgICBjb25zdCBuZXdMaW5lID0gYFxcbmBcblxuICAgIGZvciAobGV0IGJsb2NrIG9mIHRoaXMuX2Jsb2Nrcykge1xuICAgICAgY29uc3QgbGluZXMgPSBibG9jay5nZXRMaW5lcygpXG4gICAgICBmb3IgKGxldCBsaW5lIG9mIGxpbmVzKSB7XG4gICAgICAgIHJlc3VsdCArPSBpbmRlbnQgKyBsaW5lLnZhbHVlICsgbmV3TGluZVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiByZXN1bHRcbiAgfVxuXG4gIF9zZXRGcmFtZXMgKGZyYW1lSWQsIGZyYW1lVXJsKSB7XG4gICAgaWYgKGZyYW1lSWQgJiYgZnJhbWVJZCAhPT0gMCkge1xuICAgICAgdGhpcy5fZnJhbWVJZCA9IGZyYW1lSWRcbiAgICAgIHRoaXMuX2ZyYW1lID0gYGZyYW1lXyR7ZnJhbWVJZH1gXG4gICAgICB0aGlzLl9hbGxGcmFtZXNbZnJhbWVJZF0gPSBmcmFtZVVybFxuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9mcmFtZUlkID0gMFxuICAgICAgdGhpcy5fZnJhbWUgPSAncGFnZSdcbiAgICB9XG4gIH1cblxuICBfaGFuZGxlS2V5RG93biAoc2VsZWN0b3IsIHZhbHVlKSB7XG4gICAgcmV0dXJuIG5ldyBCbG9jayh0aGlzLl9mcmFtZUlkLCB7IHR5cGU6IGRvbUV2ZW50cy5DSEFOR0UsIHZhbHVlOiBgR2l2ZW4gSSB0eXBlICcke3ZhbHVlfScgaW4gZmllbGQgJyR7c2VsZWN0b3J9J2AgfSlcbiAgfVxuXG4gIF9oYW5kbGVDbGljayAoc2VsZWN0b3IpIHtcbiAgICBjb25zdCBibG9jayA9IG5ldyBCbG9jayh0aGlzLl9mcmFtZUlkKVxuICAgIGlmICh0aGlzLl9vcHRpb25zLndhaXRGb3JTZWxlY3Rvck9uQ2xpY2spIHtcbiAgICAgIGJsb2NrLmFkZExpbmUoeyB0eXBlOiBkb21FdmVudHMuQ0xJQ0ssIHZhbHVlOiBgR2l2ZW4gSSBjbGljayBvbiAnJHtzZWxlY3Rvcn0nYCB9KVxuICAgIH1cbiAgICByZXR1cm4gYmxvY2tcbiAgfVxuICBfaGFuZGxlQ2hhbmdlIChzZWxlY3RvciwgdmFsdWUpIHtcbiAgICByZXR1cm4gbmV3IEJsb2NrKHRoaXMuX2ZyYW1lSWQsIHsgdHlwZTogZG9tRXZlbnRzLkNIQU5HRSwgdmFsdWU6IGBHaXZlbiBJIHR5cGUgJyR7dmFsdWV9JyBpbiBmaWVsZCAnJHtzZWxlY3Rvcn0nYCB9KVxuICB9XG4gIF9oYW5kbGVHb3RvIChocmVmKSB7XG4gICAgcmV0dXJuIG5ldyBCbG9jayh0aGlzLl9mcmFtZUlkLCB7IHR5cGU6IHBwdHJBY3Rpb25zLkdPVE8sIHZhbHVlOiBgR2l2ZW4gSSBnbyBvbiAnJHtocmVmfSdgIH0pXG4gIH1cblxuICBfaGFuZGxlVmlld3BvcnQgKHdpZHRoLCBoZWlnaHQpIHtcbiAgICAvL3JldHVybiBuZXcgQmxvY2sodGhpcy5fZnJhbWVJZCwgeyB0eXBlOiBwcHRyQWN0aW9ucy5WSUVXUE9SVCwgdmFsdWU6IGBhd2FpdCAke3RoaXMuX2ZyYW1lfS5zZXRWaWV3cG9ydCh7IHdpZHRoOiAke3dpZHRofSwgaGVpZ2h0OiAke2hlaWdodH0gfSlgIH0pXG4gIH1cblxuICBfaGFuZGxlU2NyZWVuc2hvdCAob3B0aW9ucykge1xuICAgIGxldCBibG9ja1xuICAgIGJsb2NrID0gbmV3IEJsb2NrKHRoaXMuX2ZyYW1lSWQsIHtcbiAgICAgICAgdHlwZTogcHB0ckFjdGlvbnMuU0NSRUVOU0hPVCxcbiAgICAgICAgdmFsdWU6IGBUYWtlIGEgc2NyZWVuc2hvdCBgXG4gICAgfSlcbiAgICB0aGlzLl9zY3JlZW5zaG90Q291bnRlcisrXG4gICAgcmV0dXJuIGJsb2NrXG4gIH1cblxuICBfaGFuZGxlV2FpdEZvck5hdmlnYXRpb24gKCkge1xuICB9XG5cbiAgX3Bvc3RQcm9jZXNzU2V0RnJhbWVzICgpIHtcbiAgfVxuXG4gIF9wb3N0UHJvY2Vzc0FkZEJsYW5rTGluZXMgKCkge1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/code-generator/CodeGenerator.js\n");

/***/ })

})